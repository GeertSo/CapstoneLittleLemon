
import React, { useState } from 'react';
import { View, StyleSheet, Image, Text, Pressable, TextInput } from 'react-native';

const TextIn = () => {
  const [firstname, setFirstname] = useState('');
  const [email, setEmail] = useState('');
  const [validEmail, setValidEmail] = useState(false);

  const validateEmail = (email) => {
    return email.match(
    /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    );
  }

  const onChangeEmail = (e) => {
    setEmail(e);
    setValidEmail(validateEmail(email));
    // console.log("email: ", email);
    // if (validEmail) {
    //   console.log("email is valid!!!");
    // }
  };

  const onChangeName = (e) => {
    setFirstname(e);
    // console.log("Firstname: ",firstname);
  }

  return (
    <View style = {styles.textInputContainer}>
      <Text style={styles.regularText}>
        Let us get to know you
      </Text>
      <Text style={{...styles.regularText, marginTop: 180}}>
        First Name
      </Text>
      <TextInput
        style={styles.inputBox}
        value={firstname}
        onChangeText={onChangeName}
        placeholder={'Type your first name'}
        keyboardType={'default'}
      />
      <Text style={styles.regularText}>
        Email
      </Text>
      <TextInput
        style={styles.inputBox}
        value={email}
        onChangeText={onChangeEmail}
        placeholder={'Type your email'}
        keyboardType={'email-address'}
      />
    </View>
  )
}





const OnboardingScreen = () => {

  const Header = () => {
    return (
      <View style = {styles.headercontainer}>
        <Image
          style={styles.headerimage}
          source={require('../img/Logo1.png')}
          resizeMode="contain"
          accessible={true}
          accessibilityLabel={'Little Lemon Logo Grey'}
        />
      </View>
    )
  }
    
  const dummy = () => {
    return;
  }
  
  const Footer = () => {
    const [validEmail, setValidEmail] = useState(false);

    return (
      <View style = {styles.footercontainer}>
        <View style={styles.buttonContainer}>
          <Pressable
            onPress={() => dummy()}
            style={validEmail? styles.buttonEnabled : styles.buttonDisabled}>
            <Text style={styles.buttonText}>Next</Text>
          </Pressable>
        </View>
      </View>
    )
  }


  return (
    <>
      <Header />
      <TextIn/>
      <Footer/>
   </>
  );
};

const styles = StyleSheet.create({
  headercontainer: {
    flex: 0.2,
    backgroundColor: 'lightgrey',
    alignItems: 'center',
  },
  textInputContainer: {
    flex: 0.85,
    backgroundColor: 'grey',
    alignItems: 'center',
  },  
  footercontainer: {
    flex: 0.15,
    backgroundColor: 'lightgrey',
  },
  headerimage: {
    width: '75%',
    height: '80%',
    marginVertical: 30,
  },
  regularText: {
    fontSize: 24,
    padding: 8,
    marginTop: 20,
    color: 'black',
    textAlign: 'center',
  },
  inputBox: {
    marginLeft: 10,
    marginRight: 10,
    marginVertical: 2,
    borderWidth: 1,
    borderRadius: 8,
    padding: 6,
    paddingLeft: 10,
    fontSize: 18,
    borderColor: 'black',
    backgroundColor: 'white',
    width: 280,
  },
  buttonContainer: {
    marginTop: '10%',
    marginLeft: '70%',
  },
  buttonDisabled: {
    padding: 6,
    borderColor: 'grey',
    backgroundColor: 'grey',
    borderWidth: 2,
    borderRadius: 6,
    width: 80,
  },
  buttonEnabled: {
    padding: 6,
    borderColor: 'green',
    backgroundColor: 'green',
    borderWidth: 2,
    borderRadius: 6,
    width: 80,
  },
  buttonText: {
    color: 'black',
    textAlign: 'center',
    fontSize: 18,
  },
});

export default OnboardingScreen;